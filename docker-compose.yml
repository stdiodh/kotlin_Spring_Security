services:
  # MySQL 서비스 정의
  mysql:
    image: mysql:8.0  # MySQL 이미지 및 버전 (8.0 권장)
    container_name: example-mysql-container # 컨테이너 이름
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # 루트 비밀번호
      MYSQL_DATABASE: ${DB_NAME}             # 생성할 데이터베이스 이름
      MYSQL_USER: ${DB_USER}                 # 생성할 사용자 이름
      MYSQL_PASSWORD: ${DB_PASSWORD}         # 사용자의 비밀번호
    volumes:
      - mysql_data:/var/lib/mysql            # 데이터 영속성을 위한 볼륨
    networks:
      - example_net
    ports:
      - "3306:3306" # 외부에서 DB에 직접 접속할 때 사용 (개발용)

  # Spring Boot 서비스 정의
  app:
    image: ${IMAGE_NAME}  # 빌드된 Spring Boot Docker 이미지
    container_name: example-server-container # 컨테이너 이름
    environment:
      # Spring Boot가 MySQL에 연결하기 위한 표준 환경 변수
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql # mysql 서비스가 준비된 후에 실행되도록 설정
    networks:
      - example_net
    env_file:
      - .env
    ports:
      - "8080:8080"

volumes:
  mysql_data: # 볼륨 이름 변경

networks:
  example_net:
    name: example_net
    external: true